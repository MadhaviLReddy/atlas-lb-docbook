<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
    <!-- Some useful entities borrowed from HTML -->
    <!ENTITY ndash  "&#x2013;">
    <!ENTITY mdash  "&#x2014;">
    <!ENTITY hellip "&#x2026;">

    <!-- Useful for describing APIs -->
    <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
    <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
    <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
    <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

    <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Check_mark_23x20_02.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>

    <!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
        <imageobject>
        <imagedata fileref="img/Arrow_east.svg"
        format="SVG" scale="60"/>
        </imageobject>
        </inlinemediaobject>'>
]>
<book version="5.0" xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml"
      xmlns:db="http://docbook.org/ns/docbook">
    <?rax title.font.size="35px" subtitle.font.size="20px"?>
    <title>OpenStack Load Balancers Developer Guide</title>
    <titleabbrev>OpenStack LB Dev Guide</titleabbrev>
    <info>
        <author>
            <personname>
                <firstname/>
                <surname/>
            </personname>
            <affiliation>
                <orgname>Open Stack</orgname>
            </affiliation>
        </author>
        <releaseinfo>API v1.1</releaseinfo>
        <productname>Load Balancers</productname>
        <pubdate>2011-04-19</pubdate>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the template.</remark>
            </annotation>
        </legalnotice>
        <abstract>
            <para>This document is intended for software developers interested in developing
                applications using the OpenStack Load Balancers Application Program Interface
                (<abbrev>API</abbrev>).
            </para>
        </abstract>
        <cover>
            <para>this is a placeholder for the front cover</para>
        </cover>
        <cover>
            <para>this is a placeholder for the back cover</para>
        </cover>
    </info>
    <chapter>
        <title>Overview</title>
        <section>
            <title>Intended Audience</title>
            <para>This guide is intended for software developers who want to create applications using
                the OpenStack Load Balancers API. It assumes the reader has a general understanding of
                load balancing concepts and is familiar with:
            </para>
            <para>
                <itemizedlist spacing="compact">
                    <listitem>
                        <para>ReSTful web services</para>
                    </listitem>
                    <listitem>
                        <para>HTTP/1.1 conventions</para>
                    </listitem>
                    <listitem>
                        <para>JSON and/or XML serialization formats</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Document Change History</title>
            <para>This version of the Developer Guide replaces and obsoletes all previous versions.
                The most recent changes are described in the table below: </para>
            <informaltable rules='all'>
                <thead>
                    <tr align="center">
                        <td colspan="1">Revision Date</td>
                        <td colspan="4">Summary of Changes</td>
                    </tr>
                </thead>
                <tbody>
                     <tr align="left">
                        <td colspan="1" align="center">May 27, 2011</td>
                        <td colspan="4" align="left">
                            <itemizedlist spacing="compact">
                                <listitem>
                                    <para>Clarified some aspects after received feedback.</para>
                                </listitem>
                            </itemizedlist>
                        </td>
                    </tr>
                    <tr align="left">
                        <td colspan="1" align="center">Apr. 19, 2011</td>
                        <td colspan="4" align="left">
                            <itemizedlist spacing="compact">
                                <listitem>
                                    <para>Added details to support initial GA release.</para>
                                </listitem>
                            </itemizedlist>
                        </td>
                    </tr>
                    <tr align="left">
                        <td colspan="1" align="center">Mar. 2, 2011</td>
                        <td colspan="4" align="left">
                            <itemizedlist spacing="compact">
                                <listitem>
                                    <para>Revised code samples and formatting to address initial beta feedback.</para>
                                </listitem>
                            </itemizedlist>
                        </td>
                    </tr>
                    <tr align="left">
                        <td colspan="1" align="center">Feb. 23, 2011</td>
                        <td colspan="4" align="left">
                            <itemizedlist spacing="compact">
                                <listitem>
                                    <para>Initial release for public beta.</para>
                                </listitem>
                            </itemizedlist>
                        </td>
                    </tr>
                </tbody>
            </informaltable>
        </section>
    </chapter>
    <chapter>
        <title>Concepts</title>
        <para>To use OpenStack Load Balancers API effectively, you should understand several key
            concepts:
        </para>
        <section>
            <title>Load Balancer</title>
            <para>A load balancer is a logical device. It is used to distribute workloads between
                multiple back-end systems or services called nodes, based on the criteria defined
                as part of its configuration.
            </para>
        </section>
        <section>
            <title>Virtual IP</title>
            <para>A virtual IP is an Internet Protocol (IP) address configured on the load balancer
                for use by clients connecting to a service that is load balanced. Incoming
                connections and requests are distributed to back-end nodes based on the configuration of the load
                balancer. </para>
        </section>
        <section>
            <title>Node</title>
            <para>A node is a back-end device providing a service on a specified IP and port.</para>
        </section>
        <section>
            <title>Health Monitor</title>
            <para>A health monitor is a feature of each load balancer. It is used to determine
                whether or not a back-end node is usable for processing a request. The load
                balancing service supports two types of health monitors: passive and active. </para>
            <section>
                <title>Passive Health Monitor</title>
                <para>By default, all load balancing configurations utilize a passive health
                    monitor, which is the default monitoring and does not require configuration from
                    the user. If the passive health monitoring determines that a node is down, unreachable
                    or malfunctioning, it puts the node in an OFFLINE state and stops sending traffic to it.</para>
            </section>
            <section>
                <title>Active Health Monitor</title>
                <para>Active health monitoring is a technique that is configured by users. It uses
                    synthetic transactions executed at periodic intervals to determine the condition of a node.
                    When active monitoring is configured, it takes over the monitoring of the nodes, and passive
                    monitoring is disabled. Conversely, when active monitoring configuration is removed
                    by the user, passive monitoring is re-enabled for the nodes of the load balancer. This gurantees that
                    the nodes health is always monitored. </para>
                <para>When configuring active health monitoring, a user can choose between using one of three types of probes:
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>
                                CONNECT
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                HTTP
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                HTTPS
                            </para>
                        </listitem>
                    </itemizedlist>
                    These probes are executed at configured intervals; in the event of a failure, the node
                    status changes to
                    <code>OFFLINE</code>
                    and the node will not receive traffic. If, after running a subsequent test, the probe
                    detects that the node has recovered, then the node's status is changed to
                    <code>ONLINE</code>
                    and it is capable of servicing requests.
                </para>
            </section>
        </section>
        <section>
            <title>Session Persistence</title>
            <para>Session persistence is a feature of the load balancing service. It attempts to
                force subsequent connections to a service to be redirected to the same node as long
                as it is online. </para>
        </section>
        <section>
            <title>Connection Logging</title>
            <para>The connection logging feature allows for retrieving access logs (for HTTP-based
                protocol traffic) or connection and transfer logs (for all other traffic) </para>
        </section>
    </chapter>
    <chapter>
        <title>General API Information</title>
        <para>Sections in this chapter describe operations and guidelines that are common to all
              OpenStack APIs, not specific to the Load Balancing API.</para>
        <section>
            <title>Authentication</title>
            <para>Load Balancing API will use the standard defined by OpenStack for authentication.
                  This is currently work in progress. This section will describe how users can authenticate
                  and obtain a token from the OpenStack Authentication service, and how they can present
                  this token using the Load Balancing API.
            </para>
            <para>Refer to current status of OpenStack Authentication at
                 http://wiki.openstack.org/openstack-authn for detailed information</para>
        </section>
        <section>
            <title>Service Access/Endpoints</title>
            <para>Your service provider will publish the endpoints that you can use to connect
                  to their LB service.</para>
        </section>
        <section>
            <title>Request/Response Types</title>
            <para>The  Cloud Load Balancers API supports both the JSON and XML data serialization
                formats. The request format is specified using the
                <code>Content-Type</code>
                header and is required for operations that have a request body. The response format can be
                specified in requests using either the
                <code>Accept</code>
                header or adding an
                <code>.xml</code>
                or
                <code>.json</code>
                extension to the request URI. Note that it is possible for a response to be serialized using
                a format different from the request. If no response format is specified, JSON is the default.
                If conflicting formats are specified using both an
                <code>Accept</code>
                header and a query extension, the query extension takes precedence.
            </para>
            <table rules="all">
                <caption>JSON and XML Response Formats</caption>
                <thead>
                    <tr align="center">
                        <td>Format</td>
                        <td>Accept Header</td>
                        <td>Query Extension</td>
                        <td>Default</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td>JSON</td>
                        <td>application/json</td>
                        <td>.json</td>
                        <td>Yes</td>
                    </tr>
                    <tr align="left">
                        <td>XML</td>
                        <td>application/xml</td>
                        <td>.xml</td>
                        <td>No</td>
                    </tr>
                </tbody>
            </table>
        </section>

            <section>
            <title>Content Compression</title>
            <para>
                       Request and response body data may be encoded with gzip compression to accelerate
                       interactive performance of API calls and responses. This is controlled using the
                       <code>Accept-Encoding</code>
                       header in the request from the client and indicated by the
                       <code>Content-Encoding</code>
                       header in the server response. Unless the header is explicitly set, encoding defaults to disabled.
                   </para>
                   <table rules="all">
                       <caption>Encoding Headers</caption>
                       <thead>
                           <tr align="center">
                               <td>Header Type</td>
                               <td>Name</td>
                               <td>Value</td>
                           </tr>
                       </thead>
                       <tbody>
                           <tr align="left">
                               <td>HTTP/1.1 Request</td>
                               <td>
                                   <code>Accept-Encoding</code>
                               </td>
                               <td>
                                   <code>gzip</code>
                               </td>
                           </tr>
                           <tr align="left">
                               <td>HTTP/1.1 Response</td>
                               <td>
                                   <code>Content-Encoding</code>
                               </td>
                               <td>
                                   <code>gzip</code>
                               </td>
                           </tr>
                       </tbody>
                   </table>
               </section>
               <section>
                   <title>Persistent Connections</title>
                   <para>
                       By default, the API supports persistent connections via <code>HTTP/1.1</code> keepalives.
                       All connections will be kept alive unless the connection header is set to close.
                   </para>
                   <note>
                       <para>
                           The server may close the connection at any time and clients should not rely on this behavior.
                       </para>
                   </note>
               </section>
               <section>
                   <title>Paginated Collections</title>
                   <para>To reduce load on the service, list operations will return a maximum of 100 items
                       at a time. To navigate the collection, the
                       <code>limit</code>
                       and
                       <code>marker</code>
                       parameters (for example,
                       <code>?limit=50&amp;marker=1</code>
                       ) can be set in the URI. If a marker beyond the end of a list is given, an empty list is
                       returned. Note that list operations never return
                       <returnvalue>404</returnvalue>
                       (itemNotFound) faults.
                   </para>
               </section>

        <section>
                    <title>Limits</title>
                    <para>Accounts may be preconfigured with a set of thresholds (or limits) to
                        manage capacity and prevent abuse of the system. The system recognizes two kinds of
                        limits: rate limits and absolute limits. Rate limits are thresholds that are reset
                        after a certain amount of time passes. Absolute limits are fixed.
                    </para>
                    <section>
                        <title>Rate Limits</title>
                        <para>
                            We specify rate limits in terms of both a
                            human-readable wild-card URI and a
                            machine-processable regular expression. The
                            regular expression boundary matcher '^' takes
                            effect after the root URI path. For example, the
                            regular expression
                            <code>^/v1.1/1234/loadbalancers</code>
                            would match the bolded portion of the following URI:
                            <code>https://loadbalancers.api.openstack.org</code>
                            <emphasis role="bold"><code>/v1.1/1234/loadbalancers</code></emphasis>.
                        </para>
                        <table rules="all">
                            <caption>Default Rate Limits</caption>
                            <?dbfo keep-together="always"?>
                            <thead>
                                <tr align="center">
                                    <td>Verb</td>
                                    <td>URI</td>
                                    <td>RegEx</td>
                                    <td>Default Limit</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr align="left">
                                    <td>&GET;
                                    </td>
                                    <td>/v1.1/*</td>
                                    <td>^/1.1/.*</td>
                                    <td>5/second</td>
                                </tr>
                                <tr align="left">
                                    <td>&POST;
                                    </td>
                                    <td>/v1.1/*</td>
                                    <td>^/1.1/.*</td>
                                    <td>2/second</td>
                                </tr>
                                <tr align="left">
                                    <td>&POST;
                                    </td>
                                    <td>/v1.1/*</td>
                                    <td>^/1.1/.*</td>
                                    <td>25/minute</td>
                                </tr>
                                <tr align="left">
                                    <td>&PUT;
                                    </td>
                                    <td>/v1.1/*</td>
                                    <td>^/1.1/.*</td>
                                    <td>5/second</td>
                                </tr>
                                <tr align="left">
                                    <td>&DELETE;
                                    </td>
                                    <td>/v1.1/*</td>
                                    <td>^/1.1/.*</td>
                                    <td>2/second</td>
                                </tr>
                            </tbody>
                        </table>
                        <para>Rate limits are applied in order relative to the verb, going from least to most
                            specific. For example, although the threshold for &POST; to /v1.1/* is 25 per minute,
                            one cannot &POST; to /v1.1/* more than 2 times per second because the rate limit for any
                            &POST; is 2 per second. In the event you exceed the thresholds established for your account, a
                            <errorcode>413</errorcode>
                            (Rate Control) HTTP response will be returned with a
                            <code>Retry-After</code>
                            header to notify the client when they can attempt to try again.
                        </para>
                    </section>
                    <section>
                        <title>Absolute Limits</title>
                        <para>
                            Absolute limits are specified as name/value pairs. Then name of the
                            absolute limit uniquely identifies the limit within a deployment. For example
                            <code>maxNodesPerLoadbalancer</code>
                            identifies the total number of nodes that may be associated with a given load balancer.
                        </para>
                        <para> The following table shows some of these limits and example values:</para>
                        <informaltable rules="all">
                            <thead>
                                <tr align="center">
                                    <td>Name</td>
                                    <td>Value</td>
                                    <td>Description</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr align="center">
                                    <td>maxLoadBalancers</td>
                                    <td>20</td>
                                    <td>Maximum loadbalancers that can be created for this account</td>
                                </tr>
                                <tr align="center">
                                    <td>maxNodesPerLoadBalancer</td>
                                    <td>5</td>
                                    <td>Maximum nodes allowed per load balancer</td>
                                </tr>
                                <tr align="center">
                                    <td>maxVIPsperLoadBalancer</td>
                                    <td>2</td>
                                    <td>Maximum VIPs  allowed per load balancer</td>
                                </tr>
                                 <tr align="center">
                                    <td>maxDaysForDeletedLoadBalancers</td>
                                    <td>15</td>
                                    <td>The maximum number of days that deleted loadbalancers can be queried by the user</td>
                                </tr>
                                <tr align="center">
                                    <td>maxLoadBalancerNameLength</td>
                                    <td>15</td>
                                    <td>Maximum length of a load balancer name</td>
                                </tr>
                            </tbody>
                        </informaltable>
                    </section>
                    <section>
                        <title>Determining Limits Programmatically</title>
                        <para>
                            Applications can programmatically determine current account limits using the
                            <code>/limits</code>
                            URI as follows:
                        </para>
                        <informaltable rules="all">
                            <thead>
                                <tr align="center">
                                    <td colspan="1">Verb</td>
                                    <td colspan="1">URI</td>
                                    <td colspan="3">Description </td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr align="left">
                                    <td colspan="1">&GET;
                                    </td>
                                    <td colspan="1">/limits</td>
                                    <td colspan="3">Return the current limits for the account.</td>
                                </tr>
                            </tbody>
                        </informaltable>
                        <para>
                            Normal Response Code(s):
                            <returnvalue>200</returnvalue>
                        </para>
                        <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                            <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                            unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                            overLimit (<errorcode>413</errorcode>)
                        </simpara>
                        <para>
                            This operation does not require a request body.
                        </para>
                        <example>
                            <title>List Limits Response: XML</title>
                            <programlisting language="xml">
        <xi:include href="samples/lb-limits-response.xml" parse="text"/>
                            </programlisting>
                        </example>
                        <example>
                            <title>List Limits Response: JSON</title>
                            <programlisting language="javascript">
        <xi:include href="samples/lb-limits-response.json" parse="text"/>
                            </programlisting>
                        </example>
                    </section>
                </section>

        <section>
            <title>Faults</title>
            <para> API calls that return an error return one of the following fault objects. All
                           fault objects extend from the base fault, <code>serviceFault</code>, for easier
                           exception handling for languages that support it. </para>
                       <section>
                           <title>
                               serviceFault
                           </title>
                           <para>
                               The
                               <code>serviceFault</code>
                               and by extension all other faults include
                               <code>message</code>
                               and
                               <code>detail</code>
                               elements which contain strings describing the nature of the fault
                               as well as a
                               <code>code</code>
                               attribute representing the HTTP response code for convenience.
                               The
                               <code>code</code>
                               attribute of the fault is for the convenience of the caller so that they may retrieve the response
                               code from the HTTP response headers
                               or directly from the fault object if they choose.
                               The caller should not expect the
                               <code>serviceFault</code>
                               to be returned directly but should instead expect only one of the child faults to be returned.
                           </para>
                       </section>
                       <section>
                           <title>
                               badRequest
                           </title>
                           <para>This fault indicates that the data in the request object is invalid; for example,
                               a string was used in a parameter that was expecting an integer. The fault will wrap
                               validation errors.
                           </para>
                           <example>
                               <title>Fault Response, badRequest</title>
                           <literallayout class="monospaced">
           <![CDATA[<badRequest xmlns="http://docs.openstack.org/loadbalancers/api/v1.1" code="400">
               <message>Validation fault</message>
               <details>The object is not valid</details>
                   <validationErrors>
                       <message>Node ip is invalid. Please specify a valid ip.</message>
                   </validationErrors>
           </badRequest>]]>
                           </literallayout>
                               </example>
                       </section>
                       <section>
                           <title>
                               immutableEntity
                           </title>
                           <para>
                               This fault is returned when a user attempts to modify an item that is not currently in a state
                               that allows modification. For example, load balancers in a status of
                               <code>PENDING_UPDATE</code>,<code>BUILD</code>, or
                               <code>DELETED</code>
                               may not be modified.
                           </para>
                           <example>
                               <title>Fault Response, immutableEntity</title>
                               <literallayout class="monospaced">
           <![CDATA[<immutableEntity code="422" xmlns="http://docs.openstack.org/loadbalancers/api/v1.1">
               <message>The object at the specified URI is immutable and can not be overwritten.</message>
           </immutableEntity>]]>
                           </literallayout>
                           </example>
                       </section>
                       <section>
                           <title>
                               itemNotFound
                           </title>
                           <example>
                               <title>Fault Response, itemNotFound</title>
                           <literallayout class="monospaced">
           <![CDATA[<itemNotFound code="404" xmlns="http://docs.openstack.org/loadbalancers/api/v1.1">
               <message>Object not Found</message>
           </itemNotFound>]]>
                           </literallayout>
                               </example>
                       </section>
                       <section>
                           <title>
                               loadBalancerFault
                           </title>
                           <para>
                               The
                               <code>loadBalancerFault</code>
                               fault shall be returned in the event that an error occurred during a loadbalancer operation.
                           </para>
                           <example>
                               <title>Fault Response, loadBalancerFault</title>
                               <literallayout class="monospaced">
           <![CDATA[<loadBalancerFault code="500" xmlns="http://docs.openstack.org/loadbalancers/api/v1.1">
               <message>Load Balancer has experienced an internal error</message>
           </loadBalancerFault>]]>
                           </literallayout>
                           </example>
                       </section>
                       <section>
                           <title>
                               outOfVirtualIps
                           </title>
                           <para>This fault indicates that there are no virtual IPs left to assign to a new
                               load balancer. In practice, this fault should not occur, as virtual IPs will be
                               ordered as capacity is required. If you do experience this fault, contact support so
                               that we may make more IPs available.
                           </para>
                           <example>
                               <title>Fault Response, outOfVirtualIps</title>
                           <literallayout class="monospaced">
           <![CDATA[<outOfVirtualIps code="500" xmlns="http://docs.openstack.org/loadbalancers/api/v1.1">
               <message>
                   Out of virtual IPs. Please contact support so they can allocate more virtual IPs.
               </message>
           </outOfVirtualips>]]>
                           </literallayout>
                               </example>
                       </section>
                       <section>
                           <title>
                               overLimit
                           </title>
                           <para>
                               This fault is returned when the user has exceeded a currently allocated limit.
                           </para>
                           <example>
                               <title>Fault Response, overLimit</title>
                               <literallayout class="monospaced">
           <![CDATA[<overLimit code="413" xmlns="http://docs.openstack.org/loadbalancers/api/v1.1">
               <message>Your account is currently over the limit so your request could not be processed.</message>
           </overLimit>]]>
                           </literallayout>
                           </example>
                       </section>
                       <section>
                           <title>
                               serviceUnavailable
                           </title>
                           <para>
                               This fault is returned when the service is unavailable, such as when the service is undergoing
                               maintenance. Note that this does not necessarily mean that the currently configured loadbalancers
                               are unable to process traffic; it simply means that the API is currently unable to service
                               requests.
                           </para>
                           <example>
                               <title>Fault Response, serviceUnavailable</title>
                           <literallayout class="monospaced">
           <![CDATA[<serviceUnavailable code="500" xmlns="http://docs.openstack.org/loadbalancers/api/v1.1">
               <message>The Load balancing service is currently not available</message>
           </serviceUnavailable>]]>
                           </literallayout>
                               </example>
                       </section>
                       <section>
                           <title>
                               unauthorized
                           </title>
                           <para>
                               This fault is returned when the user is not authorized to perform an attempted operation.
                           </para>
                           <example>
                               <title>Fault Response, unauthorized</title>
                               <literallayout class="monospaced">
           <![CDATA[<unauthorized code="401" xmlns="http://docs.openstack.org/loadbalancers/api/v1.1">
               <message>You are not authorized to execute this operation.</message>
           </unauthorized>]]>
                           </literallayout>
                           </example>
                       </section>
                       <section>
                           <title>
                               unprocessableEntity
                           </title>
                           <para>
                               This fault is returned when an operation is requested on an item that was unabled to
                               be followed due to semantic errors.
                           </para>
                           <example>
                               <title>Fault Response, unprocessableEntity</title>
                               <literallayout class="monospaced">
           <![CDATA[<unprocessableEntity code="422" xmlns="http://docs.openstack.org/loadbalancers/api/v1.1">
               <message>The Object at the specified URI is unprocessable.</message>
           </unprocessableEntity>]]>
                           </literallayout>
                           </example>
                       </section>

        </section>
    </chapter>
    <chapter>
        <title>API Operations</title>
        <para>This chapter explains specific API operations. For ideas relevant to all API operations, see the "General API Information" chapter.</para>
        <section>
            <title>Load Balancers</title>
        <section>
            <title>List Load Balancers</title>
            <informaltable rules="all">
                <thead>
                    <tr align="center">
                        <td colspan="1">Verb</td>
                        <td colspan="3">URI</td>
                        <td colspan="3">Description</td>
                        <td colspan="2">Representation</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="1">&GET;</td>
                        <td colspan="3">/loadbalancers</td>
                        <td colspan="3">List all load balancers configured for the account. </td>
                        <td colspan="2">XML, JSON</td>
                    </tr>
                </tbody>
            </informaltable>
            <para>
                Normal Response Code(s):
                <returnvalue>200</returnvalue>
            </para>
            <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                overLimit (<errorcode>413</errorcode>)
            </simpara>
            <para>
                This operation provides a list of all load balancers configured and associated with your account.
            </para>
            <para>
                To view deleted load balancers, add "?status=DELETED" to the end of the get url. A deleted load
                balancer is immutable and irrecoverable.
            </para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>
                        <code>id</code>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <code>name</code>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <code>algorithm</code>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <code>protocol</code>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <code>port</code>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <code>created</code>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <code>updated</code>
                    </para>
                </listitem>
            </itemizedlist>
            <para>
                This operation does not require a request body.
            </para>
            <example>
                <title>List Load Balancers Response: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-list-response.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>List Load Balancers Response: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-list-response.json" parse="text"/>
                </programlisting>
            </example>
        </section>
        <section>
            <title>List Load Balancer Details</title>
            <informaltable rules="all">
                <thead>
                    <tr align="center">
                        <td colspan="1">Verb</td>
                        <td colspan="3">URI</td>
                        <td colspan="3">Description</td>
                        <td colspan="2">Representations</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="1">&GET;
                        </td>
                        <td colspan="3">/loadbalancers/loadBalancerId</td>
                        <td colspan="3">List details of the specified load balancer.</td>
                        <td colspan="2">JSON, XML</td>
                    </tr>
                </tbody>
            </informaltable>
            <para>
                Normal Response Code(s):
                <returnvalue>200</returnvalue>
            </para>
            <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                overLimit (<errorcode>413</errorcode>)
            </simpara>
            <para>This operation provides detailed output for a specific load balancer
                configured and associated with your account. This operation is not capable of
                returning details for a load balancer which has been deleted.
            </para>
            <para>
                This operation does not require a request body.
            </para>
            <example>
                <title>List Load Balancer Details Request: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-list-details-request.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>List Load Balancers Details Response: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-list-details-response.json" parse="text"/>
                </programlisting>
            </example>
        </section>
        <section>
            <title>Create Load Balancer</title>
            <informaltable rules="all">
                <thead>
                    <tr align="center">
                        <td colspan="1">Verb</td>
                        <td colspan="3">URI</td>
                        <td colspan="3">Description</td>
                         <td colspan="3">Representation</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="1">&POST;
                        </td>
                        <td colspan="3">/loadbalancers</td>
                        <td colspan="3">Create a new load balancer with the configuration defined by the request.</td>
                        <td colspan="2">XML, JSON</td>
                    </tr>
                </tbody>
            </informaltable>
            <para>
                Normal Response Code(s):
                <returnvalue>202</returnvalue>
            </para>
            <simpara>Error Response Code(s): loadbalancerFault (
                <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                overLimit (<errorcode>413</errorcode>)
            </simpara>
            <para>This operation provisions a new load balancer based on the
                configuration defined in the request object. Once the request is validated and
                progress has started on the provisioning process, a response object will be
                returned. The object will contain a unique identifier and status of the request.
            </para>
            <para> If the status returned is set to "BUILD
                Using the identifier, the caller can check on the progress of the operation by
                performing a &GET; on <code>loadbalancers/id</code>. When the status of the loadBalancer
                changes to "ACTIVE", then the loadbalancer has been successfully provisioned and is
                operational.
             </para>
            <para>The caller of this operation must specify at least the following attributes of the loadbalancer:</para>
             <itemizedlist spacing="compact">
                    <listitem>
                        <para>
                            <code>name</code>
                        </para>
                    </listitem>
                     <listitem>
                        <para>
                            <code>At least one node</code>
                        </para>
                    </listitem>

                </itemizedlist>
            <para>
                If the request cannot be fulfilled due to insufficient or invalid data, an <code>HTTP</code>
                <returnvalue>400 (Bad Request)</returnvalue>
                error response will be returned with information regarding the nature of the failure in
                the body of the response. Failures in the validation process are non-recoverable and
                require the caller to correct the cause of the failure and &POST; the request again.
            </para>
            <note>
                <para>
                    By default the system will create the HTTP loadbalancer on port 80 and assign a public IPV6 and IPV4 address to
                    the loadbalancer.
                </para>
            </note>
            <note>
                <para>
                    A load balancer's name has a max length that can be queried when querying limits.
                </para>
            </note>
            <note>
                <para> Users may configure all documented features of the load balancer at creation
                        time by simply providing the additional elements or attributes in the
                        request. This document provides an overview of all the features the load
                        balancing service supports. </para>
            </note>
            <note>
                <para> Users may request either a IPv4 or IPV6 address by specifying the version
                       in the create request. To request a IPV6 virtual address the version is specified as
                       <literallayout class="monospaced">
           <![CDATA[<virtualIp type="PUBLIC" version="IPV6"/>]]>
                        </literallayout>
                </para>
            </note>
            <example>
                <title>Create Load Balancer (Required Attributes) Request: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-create-required-request.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Create Load Balancer (Required Attributes) Request: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-create-required-request.json" parse="text"/>
                </programlisting>
            </example>
            <para>If you have at least one load balancer, you may
                    create subsequent load balancers that share a single virtual IP by issuing a
                    &POST; and supplying a virtual IP ID instead of a type. Additionally, this
                    feature is highly desirable if you wish to load balance both an unsecured and
                    secure protocol using one IP or DNS name. For example, this method makes it
                    possible to use the same load balancing configuration to support
                        <code>HTTP</code> and <code>HTTPS</code>). </para>
            <note>
                <para>
                    Load balancers sharing a virtual IP
                    <emphasis>must</emphasis>
                    utilize a unique port.
                </para>
            </note>
            <example>
                <title>Create Load Balancer (Required Attributes with Shared IP) Request: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-create-required-sharedip-request.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Create Load Balancer (Required Attributes with Shared IP) Request: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-create-required-sharedip-request.json" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Create Load Balancer (Required Attributes with Shared IP) Response: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-create-required-sharedip-response.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Create Load Balancer (Required Attributes with Shared IP) Response:
                        JSON</title>
                <programlisting>
<xi:include href="samples/lb-create-required-sharedip-response.json" parse="text"/>
                </programlisting>
            </example>
        </section>
        <section>
                <title>Update Load Balancer Attributes</title>
                <informaltable rules="all">
                    <thead>
                        <tr align="center">
                            <td colspan="1">Verb</td>
                            <td colspan="3">URI</td>
                            <td colspan="3">Description</td>
                            <td colspan="3">Representation</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="1">&PUT;
                            </td>
                            <td colspan="3">/loadbalancers/<parameter>loadBalancerId</parameter></td>
                            <td colspan="3">Update the properties of a load balancer.</td>
                            <td colspan="2">XML, JSON</td>
                        </tr>
                    </tbody>
                </informaltable>
                <para>
                    Normal Response Code(s):
                    <returnvalue>202</returnvalue>
                </para>
                <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                    <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                    unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                    overLimit (<errorcode>413</errorcode>)
                </simpara>
                <para> This operation updates the attributes of the specified load
                    balancer. Upon successful validation of the request, the service will return a
                        <returnvalue>202 (Accepted)</returnvalue> response code. A caller should check
                    that the load balancer status is ACTIVE to confirm that the update has taken effect.
                    If the load balancer status is "PENDING_UPDATE" then the caller can poll
                    the load balancer with its ID (using a GET operation) to wait for the changes to
                    be applied and the load balancer to return to an <code>ACTIVE</code> status.</para>
                <para>
                    This operation allows the caller to change one or more of the following attributes:
                </para>
                <itemizedlist spacing="compact">
                    <listitem>
                        <para>
                            <code>name</code>
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <code>algorithm</code>
                        </para>
                    </listitem>

                </itemizedlist>
                <para>
                    This operation does not return a response body.
                </para>
                <note>
                    <para>
                        The load balancer's ID, status, port and protocol  are immutable attributes
                        and cannot be modified by the caller. Supplying an unsupported attribute will result in a
                        <returnvalue>400 (badRequest)</returnvalue>
                        fault.
                    </para>
                </note>
                <example>
                    <title>Update Load Balancer Attributes Request: XML</title>
                    <programlisting language="xml">
<xi:include href="samples/lb-update-lb-attributes-request.xml" parse="text"/>
                </programlisting>
                </example>
                <example>
                    <title>Update Load Balancer Attributes Request: JSON</title>
                    <programlisting language="javascript">
<xi:include href="samples/lb-update-lb-attributes-request.json" parse="text"/>
                </programlisting>
                </example>
                <para>The load balancer's status attribute reflects the current
                    configuration status of the device. This status is immutable by the caller and is
                    updated automatically based on state changes within the service. When a load
                    balancer is first created, it may be placed into a <code>BUILD</code> status while
                    the configuration is being generated and applied based on the request. Once the
                    configuration is applied and finalized, it will be in an <code>ACTIVE</code> status.
                    In the event of a configuration change or update, the status of the load balancer
                    may change to <code>PENDING_UPDATE</code> to signify configuration changes are in
                    progress but have not yet been finalized. Load balancers in a <code>SUSPENDED</code>
                    status reject traffic and will not forward requests to back-end
                    nodes. </para>
                <table rules="all">
                    <caption>Load Balancer Statuses</caption>
                    <thead>
                        <tr align="center">
                            <td colspan="1">Name</td>
                            <td colspan="3">Description</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="1">
                                <code>ACTIVE</code>
                            </td>
                            <td colspan="3">
                                Load balancer is configured properly and ready to serve traffic to incoming requests
                                via the configured virtual IPs.
                            </td>
                        </tr>
                        <tr align="left">
                            <td colspan="1">
                                <code>BUILD</code>
                            </td>
                            <td colspan="3">
                                Load balancer is being provisioned for the first time and configuration is being
                                applied to bring the service online. The service will not yet be ready to serve
                                incoming requests.
                            </td>
                        </tr>
                        <tr align="left">
                            <td colspan="1">
                                <code>PENDING_UPDATE</code>
                            </td>
                            <td colspan="3"> Load balancer is online but configuration changes are
                                being applied to update the service based on a previous request. </td>
                        </tr>
                        <tr align="left">
                            <td colspan="1">
                                <code>PENDING_DELETE</code>
                            </td>
                            <td colspan="3"> Load balancer is online but configuration changes are
                                being applied to begin deletion of the service based on a previous
                                request. </td>
                        </tr>
                        <tr align="left">
                            <td colspan="1" >
                                <code>SUSPENDED</code>
                            </td>
                            <td colspan="3">
                                Load balancer has been taken offline and disabled.
                            </td>
                        </tr>
                        <tr align="left">
                            <td colspan="1">
                                <code>ERROR</code>
                            </td>
                            <td colspan="3">
                                The system encountered an error when attempting to configure the load
                                balancer.
                            </td>
                        </tr>
                        <tr align="left">
                            <td colspan="1">
                                <code>DELETED</code>
                            </td>
                            <td colspan="3"> Load balancers in <code>DELETED</code> status no longer exist, but can
                                still be displayed for a certain number of days after deletion. The number of days
                                can be discovered as part of querying the limits of the service.</td>
                        </tr>
                    </tbody>
                </table>
        </section>
            <section>
                <title>Remove Load Balancer</title>
                <informaltable rules="all">
                    <thead>
                        <tr align="center">
                            <td colspan="1">Verb</td>
                            <td colspan="3">URI</td>
                            <td colspan="3">Description</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="1">&DELETE;
                            </td>
                            <td colspan="3">/loadbalancers/<parameter>loadBalancerId</parameter></td>
                            <td colspan="3">Remove a load balancer from the account.</td>
                        </tr>
                    </tbody>
                </informaltable>
                <para>
                    Normal Response Code(s):
                    <returnvalue>202</returnvalue>
                </para>
                <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                    <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                    unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                    overLimit (<errorcode>413</errorcode>)
                </simpara>
                <para>
                    The remove load balancer function removes the specified load balancer and its associated
                    configuration from the account. Any and all configuration data is immediately purged and
                    is not recoverable.
                </para>
                <para>
                    This operation does not require a request body.
                </para>
                <para>
                    This operation does not return a response body.
                </para>
                <para>
                    Deleted load balancers are still displayed for a number of days after deletion when listing load balancers of an account.
                    Their status is changed to DELETED.The updated date of a DELETED load balancer reflects the time/date of its deletion.
                </para>
            </section>
        </section>
        <section>
            <title>Nodes</title>
            <para>The nodes defined by the load balancer are responsible for servicing the requests
                received through the load balancer's virtual IP. By default, the load balancer
                employs a basic health check that ensures the node is listening on its defined port.
                The node is checked at the time of addition and at regular intervals as defined by
                the load balancer health check configuration. If a back-end node is not listening on
                its port or does not meet the conditions of the defined active health check for the
                load balancer, then the load balancer will not forward connections and its status
                will be listed as <code>OFFLINE</code>. Only nodes that are in an
                <code>ONLINE</code> status will receive and be able to service traffic from the
                load balancer. </para>
            <para>The status of the node can be determined by passive or active health monitoring. </para>
             <para>The caller can assign the relevant weights to the node using
                the weight attribute of the node element. The weight of a node determines the portion of
                requests it services compared to the other nodes of the load balancer. For exampl, if node
                A has a weight of 2 and node B has a weight of 1, then the load balancer will forward twice
                as many requests to node A than to node B. If the weight attribute is not specified, then the
                node's weight is implicitly set to "1".
            </para>
            <section>
                <title>List Nodes</title>
                <informaltable rules="all">
                    <thead>
                        <tr align="center">
                            <td colspan="1">Verb</td>
                            <td colspan="3">URI</td>
                            <td colspan="3">Description</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="1">
                                &GET;
                            </td>
                            <td colspan="3">/loadbalancers/<parameter>loadBalancerId</parameter>/nodes</td>
                            <td colspan="3">List node(s) configured for the load balancer.</td>
                        </tr>
                        <tr align="left">
                            <td colspan="1">
                                &GET;
                            </td>
                            <td colspan="3">/loadbalancers/<parameter>loadBalancerId</parameter>/nodes/<parameter>nodeId</parameter></td>
                            <td colspan="3">List details of a specific node.</td>
                        </tr>
                    </tbody>
                </informaltable>
                <para>
                    Normal Response Code(s):
                    <returnvalue>200</returnvalue>
                </para>
                <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                    <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                    unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                    overLimit (<errorcode>413</errorcode>)
                </simpara>
                <para>
                    This operation does not require a request body.
                </para>
                <example>
                    <title>List Node Response: XML</title>
                    <programlisting language="xml">
<xi:include href="samples/lb-list-node-response.xml" parse="text"/>
                </programlisting>
                </example>
                <example>
                    <title>List Node Response: JSON</title>
                    <programlisting language="javascript">
<xi:include href="samples/lb-list-node-response.json" parse="text"/>
                </programlisting>
                </example>
                <example>
                    <title>List Nodes Response: XML</title>
                    <programlisting language="xml">
<xi:include href="samples/lb-list-nodes-response.xml" parse="text" />
                </programlisting>
                </example>
                <example>
                    <title>List Nodes Response: JSON</title>
                    <programlisting language="javascript">
<xi:include href="samples/lb-list-nodes-response.json" parse="text" />
                </programlisting>
                </example>
            </section>
            <section>
                <title>Add Nodes</title>
                <informaltable rules="all">
                    <thead>
                        <tr align="center">
                            <td colspan="1">Verb</td>
                            <td colspan="3">URI</td>
                            <td colspan="3">Description</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="1">
                                &POST;
                            </td>
                            <td colspan="3">/loadbalancers/<parameter>loadBalancerId</parameter>/nodes</td>
                            <td colspan="3">Add a new node to the load balancer.</td>
                        </tr>
                    </tbody>
                </informaltable>
                <para>
                    Normal Response Code(s):
                    <returnvalue>202</returnvalue>
                </para>
                <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                    <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                    unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                    overLimit (<errorcode>413</errorcode>)
                </simpara>
                <para>When a node is added, it is assigned a unique identifier that can be used
                    for mutating operations such as changing the condition or removing it.
                    Every load balancer is dual-homed on both the public Internet and internal; as a
                    result, nodes can either be internal private addresses or addresses on the public
                    Internet.
                </para>
                <example>
                    <title>Add Nodes Request: XML</title>
                    <programlisting language="xml">
<xi:include href="samples/lb-add-nodes-request.xml" parse="text" />
                </programlisting>
                </example>
                <example>
                    <title>Add Nodes Request: JSON</title>
                    <programlisting language="javascript">
<xi:include href="samples/lb-add-nodes-request.json" parse="text" />
                </programlisting>
                </example>
                <example>
                    <title>Add Nodes Response: XML</title>
                    <programlisting language="xml">
<xi:include href="samples/lb-add-nodes-response.xml" parse="text"/>
                </programlisting>
                </example>
                <example>
                    <title>Add Nodes Response: JSON</title>
                    <programlisting language="javascript">
<xi:include href="samples/lb-add-nodes-response.json" parse="text"/>
                </programlisting>
                </example>
            </section>
            <section>
                <title>Modify Nodes</title>
                <informaltable rules="all">
                    <thead>
                        <tr align="center">
                            <td colspan="1">Verb</td>
                            <td colspan="3">URI</td>
                            <td colspan="3">Description</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="1">
                                &PUT;
                            </td>
                            <td colspan="3">/loadbalancers/<parameter>loadBalancerId</parameter>/nodes/<parameter>nodeId</parameter></td>
                            <td colspan="3">Modify the configuration of a node on the load balancer.</td>
                        </tr>
                    </tbody>
                </informaltable>
                <para>
                    Normal Response Code(s):
                    <returnvalue>202</returnvalue>
                </para>
                <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                    <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                    unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                    overLimit (<errorcode>413</errorcode>)
                </simpara>
                <para>
                    This operation does not return a response body.
                </para>
                <note>
                    <para>The node's IP and port are immutable attributes and cannot be modified with a
                        &PUT; request. Supplying an unsupported attribute will result in a
                        <returnvalue>400 (badRequest)</returnvalue> fault. A load balancer supports
                        a maximum number of nodes. The maximum number of nodes per loadbalancer is returned
                        when querying the limits of the LB service.</para>
                </note>
                <para>Every node in the load balancer has an associated condition which determines
                    its role within the load balancer.
                </para>
                <table rules="all">
                    <caption>Load Balancer Node Conditions</caption>
                    <?dbfo keep-together="always"?>
                    <thead>
                        <tr align="center">
                            <td colspan="1">Name</td>
                            <td colspan="3">Description</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="1">
                                <code>ENABLED</code>
                            </td>
                            <td colspan="3">Node is permitted to accept new connections. Its status
                                            will eventually become ONLINE to reflect this configuration.
                            </td>
                        </tr>
                        <tr align="left">
                            <td colspan="1">
                                <code>DISABLED</code>
                            </td>
                            <td colspan="3">Node is not permitted to accept any new connections
                                regardless of session persistence configuration. Existing connections
                                are forcibly terminated. The node's status will change to OFFLINE once
                                the configuration has been successfully appplied.</td>
                        </tr>
                    </tbody>
                </table>
                <example>
                    <title>Update Node Condition Request: XML</title>
                    <programlisting language="xml">
<xi:include href="samples/lb-update-node-request.xml" parse="text"/>
                </programlisting>
                </example>
                <example>
                    <title>Update Node Condition Request: JSON</title>
                    <programlisting language="javascript">
<xi:include href="samples/lb-update-node-request.json" parse="text"/>
                </programlisting>
                </example>
            </section>
            <section>
                <title>Remove Nodes</title>
                <informaltable rules="all">
                    <thead>
                        <tr align="center">
                            <td colspan="1">Verb</td>
                            <td colspan="3">URI</td>
                            <td colspan="3">Description</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="1">
                                &DELETE;
                            </td>
                            <td colspan="3">/loadbalancers/<parameter>loadBalancerId</parameter>/nodes/<parameter>nodeId</parameter></td>
                            <td colspan="3">Remove a node from the load balancer.</td>
                        </tr>
                    </tbody>
                </informaltable>
                <para>
                    Normal Response Code(s):
                    <returnvalue>200</returnvalue>,
                    <returnvalue>202</returnvalue>
                </para>
                <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                    <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                    unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                    overLimit (<errorcode>413</errorcode>)
                </simpara>
                <note>
                    <para> A load balancer must have at least one node. Attempting to remove the last
                          node of a load balancer will result in a badRequest (400) error.</para>
                </note>
                <para>
                    This operation does not return a response body.
                </para>
            </section>
        </section>
        <section>
            <title>Virtual IPs</title>
            <para>
                A virtual IP (VIP) makes a load balancer accessible by clients. The load
                balancing service supports either a public VIP, routable on the public Internet, or
                a private address, routable only within the region in which the load balancer
                resides.
            </para>
            <table rules="all">
                <caption>Virtual IP Types</caption>
                <?dbfo keep-together="always"?>
                <thead>
                    <tr align="center">
                        <td colspan="1">Name</td>
                        <td colspan="3">Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="1">
                            <code>PUBLIC</code>
                        </td>
                        <td colspan="3">An address that is routable on the public Internet.</td>
                    </tr>
                    <tr align="left">
                        <td colspan="1">
                            <code>INTERNAL</code>
                        </td>
                        <td colspan="3">An address that is routable only on the internal network.</td>
                    </tr>
                </tbody>
            </table>

            <section>
                <title>List Virtual IPs</title>
                <informaltable rules="all">
                    <thead>
                        <tr align="center">
                            <td colspan="1">Verb</td>
                            <td colspan="3">URI</td>
                            <td colspan="3">Description</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="1">&GET;
                            </td>
                            <td colspan="3">/loadbalancers/<parameter>loadBalancerId</parameter>/virtualips
                            </td>
                            <td colspan="3">List all virtual IPs associated with a load balancer.</td>
                        </tr>
                    </tbody>
                </informaltable>
                <para>
                    Normal Response Code(s):
                    <returnvalue>200</returnvalue>,
                    <returnvalue>202</returnvalue>
                </para>
                <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                    <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                    unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                    overLimit (<errorcode>413</errorcode>)
                </simpara>
                <para>
                    This request does not require a request body.
                </para>
                 <note>
                     <para>The maximum number of VIPs that can be configured when creating a load balancer
                         can be discovered by querying the limits of the LB service.
                    </para>
                 </note>

                <example>
                    <title>List Virtual IPs Response: XML</title>
                    <programlisting language="xml">
                        <xi:include href="samples/lb-list-vips-response.xml" parse="text"/>
                    </programlisting>
                </example>
                <example>
                    <title>List Virtual IPs Response: JSON</title>
                    <programlisting language="javascript">
                        <xi:include href="samples/lb-list-vips-response.json" parse="text"/>
                    </programlisting>
                </example>
            </section>
        </section>
        <section>
            <title>Usage Reports</title>
        <section>
            <title>List Usage</title>
            <informaltable rules="all">
                <thead>
                    <tr align="center">
                        <td>Name</td>
                        <td>URI</td>
                        <td>Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td>&GET;
                        </td>
                        <td>/loadbalancers/loadBalancerId/usage</td>
                        <td>List current and historical usage.</td>
                    </tr>
                </tbody>
            </informaltable>
            <para>
                Normal Response Code(s):
                <returnvalue>200</returnvalue>
            </para>
            <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                overLimit (<errorcode>413</errorcode>)
            </simpara>
            <para>
                This operation does not require a request body.
            </para>
            <para>The load balancer usage reports provide a set of usage counters.
                  This list will contain at least the transferBytesIn and transferBytesOut usage
                  counters that represent respectively the amount of traffic in bytes received by the load
                  balancer from clients requests, and the amount of traffic sent from the nodes
                  as responses to clients.</para>
            <example>
                <title>Report Load Balancer Usage Response: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-report-usage-response.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Report Load Balancer Usage Response: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-report-usage-response.json" parse="text"/>
                </programlisting>
            </example>
        </section>
        </section>
         <section>
            <title>Monitors</title>
            <para>In addition to the default passive monitoring, the load balancing service includes
                an active health monitoring operation which periodically checks your back-end nodes to
                ensure they are responding correctly.
            </para>
             <para>Active health monitoring provides 3 types of health monitors. The caller can configure
                  one health monitor on the load blancer.</para>
            <para>
                The health monitor has a <code>type</code> attribute to signify what kind of monitor it is.
                This specification supports 3 types of health monitor.
            </para>
            <table rules="all">
                <caption>Health Monitor Types</caption>
                <?dbfo keep-together="always"?>
                <thead>
                    <tr align="center">
                        <td colspan="1">Name</td>
                        <td colspan="3">Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="1">CONNECT</td>
                        <td colspan="3">Health monitor is a CONNECT monitor.</td>
                    </tr>
                    <tr align="left">
                        <td colspan="1">HTTP</td>
                        <td colspan="3">Health monitor is an HTTP monitor.</td>
                    </tr>
                    <tr align="left">
                        <td colspan="1">HTTPS</td>
                        <td colspan="3">Health monitor is an HTTPS monitor.</td>
                    </tr>
                </tbody>
            </table>
        <section>
            <title>Monitor Health</title>
            <informaltable rules="all">
                <thead>
                    <tr align="center">
                        <td colspan="1">Verb</td>
                        <td colspan="3">URI</td>
                        <td colspan="3">Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="1">&GET;
                        </td>
                        <td colspan="3">/loadbalancers/<parameter>loadBalancerId</parameter>/healthmonitor</td>
                        <td colspan="3">Retrieve the health monitor configuration, if one exists.</td>
                         <td colspan="2">XML, JSON</td>
                    </tr>
                    <tr align="left">
                        <td colspan="1">&PUT;
                        </td>
                        <td colspan="3">/loadbalancers/<parameter>loadBalancerId</parameter>/healthmonitor</td>
                        <td colspan="3">Update the settings for a health monitor.</td>
                         <td colspan="2">XML, JSON</td>
                    </tr>
                    <tr align="left">
                        <td colspan="1">&DELETE;
                        </td>
                        <td colspan="3">/loadbalancers/<parameter>loadBalancerId</parameter>/healthmonitor</td>
                        <td colspan="3">Remove the health monitor.</td>
                         <td colspan="2">XML, JSON</td>
                    </tr>
                </tbody>
            </informaltable>
            <para>
                Normal Response Code(s):
                <returnvalue>200</returnvalue>,
                <returnvalue>202</returnvalue>
            </para>
            <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                overLimit (<errorcode>413</errorcode>)
            </simpara>
            <para>If a load balancer has no health monitoring configuration, then the LB service
                will return an empty response when retrieving (GET request) a health monitoring configuration.</para>
            <section>
                <title>Monitor CONNECT</title>
                <para>The monitor connects to each node on its defined port to ensure that the
                    node is listening properly. The CONNECT monitor is the most basic type of
                    health check and does not perform post-processing or protocol specific health checks. It
                    includes several configurable properties:
                </para>
                <para>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>
                                <code>delay</code>: This is the minimum time between regular calls to a monitor.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>timeout</code>: Maximum number of seconds for a monitor to wait for a connection to be
                                established to the node before it times out. The value must be less than the delay value.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <code>attemptsBeforeDeactivation</code>: Number of permissible monitor failures
                                before removing a node from rotation. (Must be a number between 1 and 10)
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <example>
                    <title>Monitor Connections Request: XML</title>
                    <programlisting language="xml">
<xi:include href="samples/lb-monitor-connect-request.xml" parse="text"/>
                </programlisting>
                </example>
                <example>
                    <title>Monitor Connections Request: JSON</title>
                    <programlisting language="javascript">
<xi:include href="samples/lb-monitor-connect-request.json" parse="text"/>
                </programlisting>
                </example>
            <example>
                <title>Monitor Connections Response: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-monitor-connect-response.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Monitor Connections Response: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-monitor-connect-response.json" parse="text"/>
                </programlisting>
            </example>
            </section>
            <section>
                <title>Monitor HTTP and HTTPS</title>
                <para> The HTTP and HTTPS monitor is more intelligent than the connect monitor. It
                        is capable of processing an HTTP or HTTPS response to determine the
                        condition of a node. It supports the same basic properties as the CONNECT
                        monitor and includes additional attributes of path that is used to evaluate the
                        HTTP response. </para>
                <para>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para><code>path</code>: The HTTP path used in the request by the monitor.
                                This must be a string beginning with a / (forward slash). The monitor expects
                                a response from the node with an HTTP status code of 200.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
            <example>
                <title>Monitor HTTP Response: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-monitor-http-response.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Monitor HTTPS Response: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-monitor-https-response.xml" parse="text"/>
                </programlisting>
            </example>
            </section>
        </section>
        </section>
        <section>
            <title>Sessions</title>
        <section>
            <title>Manage Session Persistence</title>
            <para>Session persistence is a feature of the load balancing service which
                forces multiple requests from clients to be directed to the same node. This is
                common with many web applications that do not inherently share application state
                between back-end servers.
            </para>
            <table rules="all">
                <caption>Session Persistence Modes</caption>
                <?dbfo keep-together="always"?>
                <thead>
                    <tr align="center">
                        <td colspan="1">Name</td>
                        <td colspan="3">Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="1">HTTP_COOKIE</td>
                        <td colspan="3">A session persistence mechanism that inserts an HTTP cookie and
                            is used to determine the destination back-end node. This is supported
                            for HTTP load balancing only.
                        </td>
                    </tr>
                </tbody>
            </table>
            <informaltable rules="all">
                <thead>
                    <tr align="center">
                        <td>Verb</td>
                        <td>URI</td>
                        <td>Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td>&GET;
                        </td>
                        <td>/loadbalancers/loadBalancerId/sessionpersistence</td>
                        <td>List session persistence configuration.</td>
                        <td colspan="2">XML, JSON</td>
                    </tr>
                    <tr align="left">
                        <td>&PUT;
                        </td>
                        <td>/loadbalancers/loadBalancerId/sessionpersistence</td>
                        <td>Enable session persistence.</td>
                        <td colspan="2">XML, JSON</td>
                    </tr>
                    <tr align="left">
                        <td>&DELETE;
                        </td>
                        <td>/loadbalancers/loadBalancerId/sessionpersistence</td>
                        <td>Disable session persistence.</td>
                        <td colspan="2">XML, JSON</td>
                    </tr>
                </tbody>
            </informaltable>
            <para>
                Normal Response Code(s):
                <returnvalue>200</returnvalue>,
                <returnvalue>202</returnvalue>
            </para>
            <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                overLimit (<errorcode>413</errorcode>)
            </simpara>
            <example>
                <title>List Session Persistence Configuration Response: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-list-persistence-response.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>List Session Persistence Configuration Response: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-list-persistence-response.json" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Set Session Persistence Type Request: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-set-persistence-request.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Set Session Persistence Type Request: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-set-persistence-request.json" parse="text"/>
                </programlisting>
            </example>
        </section>
        </section>
        <section>
            <title>Connections</title>
        <section>
            <title>Log Connections</title>
            <informaltable rules="all">
                <thead>
                    <tr align="center">
                        <td colspan="1">Verb</td>
                        <td colspan="3">URI</td>
                        <td colspan="3">Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="1">&GET;
                        </td>
                        <td colspan="3">/loadbalancers/loadBalancerId/connectionlogging</td>
                        <td colspan="3">View current configuration of connection logging.</td>
                    </tr>
                    <tr align="left">
                        <td colspan="1">&PUT;
                        </td>
                        <td colspan="3">/loadbalancers/loadBalancerId/connectionlogging</td>
                        <td colspan="3">Enable or disable connection logging.</td>
                    </tr>
                </tbody>
            </informaltable>
            <para>
                Normal Response Code(s):
                <returnvalue>200</returnvalue>,
                <returnvalue>202</returnvalue>
            </para>
            <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                overLimit (<errorcode>413</errorcode>)
            </simpara>
            <para>This operation allows the user to view the current connection logging
                    configuration, enable connection logging, or disable connection logging. </para>
            <para>The service provider is responsible for providing an out-of-band method for users
                  of the service to retrieve the access and connection logs of their load balancers.</para>
            <example>
                <title>List Connection Logging Configuration Response: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-list-logging-response.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>List Connection Logging Configuration Response: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-list-logging-response.json" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Enable Connection Logging Request: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-enable-logging-request.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Enable Connection Logging Request: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-enable-logging-request.json" parse="text"/>
                </programlisting>
            </example>
        </section>
        <section>
            <title>Throttle Connections</title>
            <informaltable rules="all">
                <thead>
                    <tr align="center">
                        <td>Verb</td>
                        <td>URI</td>
                        <td>Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td>&GET;
                        </td>
                        <td>/loadbalancers/loadBalancerId/connectionthrottle</td>
                        <td>List connection throttling configuration.</td>
                    </tr>
                    <tr align="left">
                        <td>&PUT;
                        </td>
                        <td>/loadbalancers/loadBalancerId/connectionthrottle</td>
                        <td>Update throttling configuration.</td>
                    </tr>
                    <tr align="left">
                        <td>&DELETE;
                        </td>
                        <td>/loadbalancers/loadBalancerId/connectionthrottle</td>
                        <td>Remove connection throttling configurations.</td>
                    </tr>
                </tbody>
            </informaltable>
            <para>
                Normal Response Code(s):
                <returnvalue>200</returnvalue>,
                <returnvalue>202</returnvalue>
            </para>
            <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                overLimit (<errorcode>413</errorcode>)
            </simpara>
            <para>
                The connection throttling feature imposes limits on the number of connections per client IP address to
                help mitigate malicious or abusive traffic to your applications. The following properties can be
                configured based on the traffic patterns for your sites.
            </para>

            <itemizedlist spacing="compact">
                <listitem>
                    <para>
                            <code>maxRequestRate</code>: Maximum number of HHTP requests (or TCP connections) allowed
                            from a single IP address in the defined <code>rateInterval</code>.
                            Setting a value of 0 allows an unlimited connection rate.
                           </para>
                </listitem>
                <listitem>
                    <para><code>rateInterval</code>: Frequency (in seconds) at which the
                                <code>maxRequestRate</code> is assessed. For example, a
                                <code>maxRequestRate</code> of 30 with a
                                <code>rateInterval</code> of 60 would allow a maximum of 30
                            connections per minute for a single IP address. This value must be
                            specified between 1 and 3600. </para>
                </listitem>
            </itemizedlist>

                        <note>
                       <para>
                           Whent the rate is exceeded, the load balancer returns a
                           serviceUnavailable (<errorcode>503</errorcode>) for HTTP/HTTPS loadbalancers.
                           For TCP loadbalancers, new connections are refused.
                       </para>F
                   </note>
            <example>
                <title>List Connection Throttling Configuration Response: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-list-throttling-response.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>List Connection Throttling Configuration Response: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-list-throttling-response.json" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Update Connection Throttling Configuration Request: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-update-throttling-request.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>Update Connection Throttling Configuration Request: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-update-throttling-request.json" parse="text"/>
                </programlisting>
            </example>
        </section>
        </section>
        <section>
            <title>Protocols</title>
        <section>
            <title>List Load Balancing Protocols</title>
            <informaltable rules="all">
                <thead>
                    <tr align="center">
                        <td>Verb</td>
                        <td>URI</td>
                        <td>Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td>&GET;
                        </td>
                        <td>/loadbalancers/protocols</td>
                        <td>List all supported load balancing protocols.</td>
                    </tr>
                </tbody>
            </informaltable>
            <para>
                Normal Response Code(s):
                <returnvalue>200</returnvalue>
            </para>
            <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                overLimit (<errorcode>413</errorcode>)
            </simpara>
            <para>
                This operation does not require a request body.
            </para>
            <para>All load balancers must define the protocol of the service which is being load
                    balanced. The protocol selection should be based on the protocol of the back-end
                    nodes. When configuring a HTTP or HTTPS load balancer, the default port for
                    the given protocol will be selected unless otherwise specified. For TCP load
                    balancers, the port attribute must be provided.</para>
            <example>
                <title>List Load Balancing Protocols Response: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-list-protocols-response.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>List Load Balancing Protocols Response: JSON</title>
                <programlisting language="xml">
<xi:include href="samples/lb-list-protocols-response.json" parse="text"/>
                </programlisting>
            </example>
        </section>
        </section>
        <section>
            <title>Algorithms</title>
            <para>All load balancers utilize an algorithm that defines how traffic should be
                directed between back-end nodes. The default algorithm for newly created load
                balancers is <code>ROUND_ROBIN</code>, which can be overridden at creation time or
                changed after the load balancer has been initially provisioned.</para>
            <para> The algorithm name is to be constant within a major revision of the load balancing API, though new
                algorithms may be created with a unique algorithm name within a given major revision
                of the service API. </para>
            <table rules="all">
                <caption>Load Balancing Algorithms</caption>
                <thead>
                    <tr align="center">
                        <td colspan="2">Name</td>
                        <td colspan="3">Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="2">
                            <code>LEAST_CONNECTIONS</code>
                        </td>
                        <td colspan="3">The node with the lowest number of connections will receive
                            requests. Weights can be defined as part of the node configuration.</td>
                    </tr>
                    <tr align="left">
                        <td colspan="2">
                            <code>ROUND_ROBIN</code>
                        </td>
                        <td colspan="3">Connections are routed to each of the back-end servers in turn.
                                        This is the default algorithm. Weights can be defined as part of the
                                        node configuration.</td>
                    </tr>
                </tbody>
            </table>
        <section>
            <title>List Load Balancing Algorithms</title>
            <informaltable rules="all">
                <thead>
                    <tr align="center">
                        <td colspan="1">Verb</td>
                        <td colspan="3">URI</td>
                        <td colspan="3">Description</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="1">&GET;
                        </td>
                        <td colspan="3">/loadbalancers/algorithms</td>
                        <td colspan="3">List all supported load balancing algorithms.</td>
                    </tr>
                </tbody>
            </informaltable>
            <para>
                Normal Response Code(s):
                <returnvalue>200</returnvalue>
            </para>
            <simpara>Error Response Code(s): loadbalancerFault (<errorcode>400</errorcode>,
                <errorcode>500</errorcode>), serviceUnavailable (<errorcode>503</errorcode>),
                unauthorized (<errorcode>401</errorcode>), badRequest (<errorcode>400</errorcode>),
                overLimit (<errorcode>413</errorcode>)
            </simpara>
            <para>
                This operation does not require a request body.
            </para>
            <example>
                <title>List Load Balancing Algorithms Response: XML</title>
                <programlisting language="xml">
<xi:include href="samples/lb-list-algorithms-response.xml" parse="text"/>
                </programlisting>
            </example>
            <example>
                <title>List Load Balancing Algorithms Response: JSON</title>
                <programlisting language="javascript">
<xi:include href="samples/lb-list-algorithms-response.json" parse="text"/>
                </programlisting>
            </example>
        </section>
        </section>
    </chapter>
    <chapter>
        <title>API Extensions</title>
        <para>Implementations of this API specifications are free to augment this core API with
            extensions as they see appropriate to extend Load Balancing features
            (e.g. support for new LB algorithms) or offer new ones. </para>
        <para> All client applications written to this core specification however must be supported by
            extended implementations. Therefore, an application using this API should not
            receive payloads or
            values not specified in this specification nor should it need to specify extra
            information in requests not described in this specification.
        </para>
        <para>For a detailed description of how to develop and use Extension APIs in OpenStack services, refer to
             OpenStack Compute API 1.1 documentation on the OpenStack website.
        </para>
    </chapter>
</book>
